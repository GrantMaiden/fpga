
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE1_SOC(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_0,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_1
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

reg [63:0] counter;
wire CLOCK_5;
wire reset;
wire pll_locked;

reg [6:0]  hex0;
reg [6:0]  hex1;
reg [6:0]  hex2;
reg [6:0]  hex3;
reg [6:0]  hex4;
reg [6:0]  hex5;
reg [31:0] hexleds;


//=======================================================
//  Structural coding
//=======================================================

pll10MHz pll_10(.refclk(CLOCK_50), .rst(reset), .outclk_0(CLOCK_5), .locked(pll_locked));
assign reset  = 0;
//assign LEDR[9] = pll_locked;

    
always @(posedge CLOCK_5)
    begin
        counter <= counter + 1;
        hexleds <= counter[51:20];
    end

    
//hexdisplay display(.x(32'h123456), .hexleds({HEX5, HEX4, HEX3, HEX2, HEX1, HEX0}));
hexdisplay display(.in(hexleds), .hexleds({HEX5, HEX4, HEX3, HEX2, HEX1, HEX0}));

assign LEDR[0]  = ~KEY[0];
assign LEDR[1]  = ~KEY[1];
assign LEDR[2]  = ~KEY[2];
assign LEDR[3]  = ~KEY[3];

assign GPIO_0 = 0;
assign GPIO_1 = 0;

endmodule
